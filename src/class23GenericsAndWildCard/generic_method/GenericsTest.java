package class23GenericsAndWildCard.generic_method;

public class GenericsTest {
	// generic method 
	public static <E> void printArray(E[] inputArray) {
		// Display array elements
		for (E element : inputArray) {
			System.out.printf("%s ", element);
		}
		System.out.println();
	}
	/*
	 *  What really happens in java runtime is:
	 *  this is called type erasure and this
	 *  method is generated by compiler called bridge
	 *  method
	 */
//	public static void printArray(Object[] inputArray) {
//		// Display array elements
//		for (Object element : inputArray) {
//			System.out.printf("%s ", element);
//		}
//		System.out.println();
//	}
	public static void main(String[] args) {
		Integer[] intArray = {1, 2, 3, 4, 5};
		Double[] doubleArray = {1.1, 2.2, 3.3, 4.4, 5.5};
		Character[] charArray = {'W', 'O', 'R', 'L', 'D'};
		
		System.out.println("Array integerArray contains: ");
		printArray(intArray);
		
		System.out.println("Array doubleArray contains: ");
		printArray(doubleArray);
		
		System.out.println("Array characterArray contains: ");
		printArray(charArray);
	}
}
